==============================================================================
CONTENTS                          *librarian* *librarian-contents*

    Installation...........................: |librarian-installation|
    Usage..................................: |librarian-usage|
    Settings...............................: |librarian-settings|

==============================================================================
INSTALLATION                                   *librarian-installation*

There are several ways to install the plugin. The recommended one is by using
Tim Pope's pathogen (http://www.vim.org/scripts/script.php?script_id=2332). In
that case, you can clone the plugin's git repository like so:
>
    git clone git://github.com/malkomalko/vim-librarian.vim.git ~/.vim/bundle/librarian
<
If your vim configuration is under git version control, you could also set up
the repository as a submodule, which would allow you to update more easily.
The command is (provided you're in ~/.vim):
>
    git submodule add git://github.com/malkomalko/vim-librarian.vim.git bundle/librarian
<
Another way is to simply copy all the essential directories inside the ~/.vim
directory: plugin, autoload, doc.

Thanks to AndrewRadev's https://github.com/AndrewRadev/simple_bookmarks.vim
which this is a fork of.

==============================================================================
USAGE                                                 *librarian-usage*

The |:VLBookmark| command accepts a name to store the bookmark. It will save the
current file and the cursor position to ~/.vim_librarian (by default).

This plugin differs from Andrew's simple_bookmarks in that you may bookmark
multiple locations with the same bookmark name, allowing for you to restore
sets of bookmarks.

Once you have some bookmarks in place, you may open them in a few different
ways.

|:VLOpenBookmarks| <bookmark> will save and close all open buffers and then
open up every file for <bookmark> giving you a clean slate to edit the part
of the application you like.

|VLQFOpenBookmarksFor| <bookmark> will open a quickfix window with the
bookmarks allowing you jump to a bookmark manually.

|VLQFOpenBookmarks| will open up all your bookmarks in a quickfix window.

Note: all commands accepting a <bookmark> name can be tab completed.

To delete a mark, highlight the bookmarked line and use |:VLDelBookmark|.
It accepts the name of the mark, which is tab-completed.

Note that bookmarks should be synchronized between vim instances. Anytime you
add a mark in one vim instance, it should be available in all others. In
practice, this is achieved by simply reading and writing the whole file on
each update. I have yet to experiment to find out if there are any performance
issues or race conditions.

==============================================================================
SETTINGS                                           *librarian-settings*

These are the variables that control the behaviour of the plugin.

                                                 *g:librarian_filename*
>
    let g:librarian_filename = '~/.vim_librarian'
<
Default value: '~/.vim_librarian'

This variable is the name of the file that stores the bookmarks. The actual
storage format is:
>
    bookmark name \t /path/to/file \t bufnum:lnum:col:off \t bookmarked line
<
In words, the four parts of a bookmark are tab-delimited, and the
second-to-last one, describing the cursor position, contains numbers that are
colon-delimited.

                                            *g:librarian_long_quickfix*
>
    let g:librarian_long_quickfix = 0
<
Default value: 0

The actual contents of the line are shown next to the bookmark's name. Setting
this variable to 1 would make them go underneath the line instead, making it
more readable, but possibly a bit more difficult to navigate.

                                                    *g:librarian_signs*
>
    let g:librarian_signs = 0
<
Default value: 1

Setting this variable to 1 would make the plugin place "->" signs on
bookmarked lines.

                                                *g:librarian_highlight*
                                                *Librarian*
>
    let g:librarian_highlight = 0
<
Default value: 0

Setting this variable to 1 would make the plugin highlight bookmarked lines.
The syntax group that's highlighted is |Librarian| and it's linked to
|Search| by default. If you want to customize it, you can use Vim's built-in
|:highlight| command.

vim:tw=78:sw=4:ft=help:norl:
